单例模式
1.手写单例模式
2.线程安全的单例模式

什么是单例
单例类在整个程序中只能有一个实例，这个类负责创建自己的对象，并确保只有一个对象被创建。

代码实现要点
a)	私有构造器
b)	持有该类的属性
c)	对外提供获取实例的静态方法

*饿汉式：线程安全、反射不安全、反序列化不安全

登记式（静态内部类）：线程安全、防止反射攻击、反序列化不安全

枚举式：线程安全、支持序列化、反序列化安全、防止反射攻击

懒汉式：线程不安全、延迟加载、(两种加同步，效率低)

*双检锁：线程安全、volatile

ThreadLocal：不加锁，以空间换时间，为每个线程提供变量的独立副本，可以保证各自线程中是单例的，但是不同线程之间不保证

CAS：无锁乐观策略，线程安全

################
instance=new Singleton7()会执行如下操作：
(1)	分配对象内存空间
(2)	初始化对象
(3)	instance指向(1)中分配的空间
在某些编译器上，可能出现指令重排：
(1)	分配对象内存空间
(2)	instance指向(1)中分配的空间 (但此时对象没有初始化)
(3)	初始化对象
##################



